<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="test" name="simplestore">

<!--   "cglib"  was   "simplestore" component of the Jakarta Commons Subproject         $Id: build.xml,v 1.57 2013/12/07 16:08:19 sameb Exp $ -->

<!-- ========== Executable Targets ======================================== -->

  <target description="Initialize and evaluate conditionals" name="init">

    <!-- read properties from the build.properties, if any -->
    <property file="${user.home}/build.properties" />
    <property name="component-propfile" value="${basedir}/build.properties"/>

    <property name="component.name" value="cglib"/>
    <property name="component.package" value="net.sf.cglib"/>
    <property name="component.title" value="cglib"/>
    <property name="component.version" value="3.1"/>

    <property name="build.home" value="build/proxy"/>
    <property name="build.transform" value="build/transform"/>
    <property name="samples.build.home" value="build/samples"/>


    <property name="test.build.home" value="build/test"/>

    <property name="dist.home" value="dist"/>
    <property name="source.home" value="src/proxy"/>
    <property name="samples.source.home" value="src/proxy/samples"/>
    <property name="source.test" value="src/test"/>
    <property name="source.asm" value="../asm-src"/>    

    <property name="compile.target" value="1.2"/>
    <property name="compile.source" value="1.2"/>
    <property name="compile.bootclasspath" value=""/>
    <property name="compile.extdirs" value=""/>

    <property name="compile.debug" value="true"/>
    <property name="compile.deprecation" value="true"/>
    <property name="compile.optimize" value="true"/>

    <path id="compile.classpath">
      <pathelement location="${build.home}/classes"/>
      <fileset dir="./lib">
		<include name="*.jar"/>
       </fileset>
    </path>

    <path id="javadoc.path">
      <pathelement path="${source.home}"/>
      <!-- pathelement path="${source.asm}"/ -->
    </path>

    <!-- ========== Test Execution Defaults =================================== -->
    <property name="cp" value=""/>
    <property name="classpath" value="${cp}:${junit.jar}" />
    <property name="test.entry" value="net.sf.cglib.TestAll" />
    <property name="test.failonerror" value="true" />
    <property name="test.runner" value="junit.textui.TestRunner" />

    <echo message="-------- ${component.name} ${component.version} --------"/>
  </target>

  <target depends="init" description="Prepare build directory" name="prepare">
    <mkdir dir="${build.home}"/>
    <mkdir dir="${build.home}/classes"/>
    <mkdir dir="${samples.build.home}/classes"/>
    <mkdir dir="${build.home}/conf"/>
    <mkdir dir="${test.build.home}/classes"/>
   
 
  </target>

  <target depends="prepare" description="Compile shareable components" 
          name="compile">
    <javac debug="${compile.debug}" deprecation="${compile.deprecation}" destdir="${build.home}/classes" optimize="${compile.optimize}" srcdir="${source.home}"
      target="${compile.target}" bootclasspath="${compile.bootclasspath}" extdirs="${compile.extdirs}" source="${compile.source}">
      <classpath refid="compile.classpath"/>
      <compilerarg compiler="jikes" value="-nowarn"/>
    </javac>
  </target>

  <target depends="init" description="Clean build and distribution directories" 
          name="clean">
    <delete dir="${build.home}"/>
    <delete dir="${test.build.home}"/>
    <delete dir="${dist.home}"/>
    <delete dir="${build.transform}"/>
  </target>

  <target depends="clean,compile" 
          description="Clean and compile all components" 
   name="all"/>

  

  <target depends="compile" 
          description="Create component Javadoc documentation" 
          name="javadoc">
    <mkdir dir="docs/api"/>
    <javadoc author="true" 
             bottom="Copyright (c) 2001 - Apache Software Foundation" 
             destdir="docs" 
             doctitle="${component.title}"
             packagenames="net.sf.cglib.*"
             access="public"
             classpathref="compile.classpath"
             sourcepathref="javadoc.path" version="true" 
             windowtitle="${component.title} (Version ${component.version})"/>
  </target>


  <target depends="jar" name="proxy"/>

  <target depends="compile" description="Create binary distribution" name="jar">
    <mkdir dir="${dist.home}"/>
    <mkdir dir="${build.home}/src"/>
    

    <copy file="LICENSE" todir="${build.home}/classes"/>
    <copy file="NOTICE" todir="${build.home}/classes"/>

    <jar basedir="${build.home}/classes" jarfile="${dist.home}/${component.name}-${component.version}.jar" >
      <include name="**/*"/>
      <exclude name="samples/**" />
    </jar> 

    <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpathref="compile.classpath"/>
    <jarjar basedir="${build.home}/classes" jarfile="${dist.home}/${component.name}-nodep-${component.version}.jar" >
      <zipfileset dir="lib" includes="asm*.txt"/>
      <zipfileset src="lib/asm-4.2.jar" excludes="META-INF"/>
      <rule pattern="org.objectweb.asm.**" result="net.sf.cglib.asm.@1"/>
      <include name="**/*"/>
      <exclude name="samples/**"/>
    </jarjar> 
  </target>

  <target depends="compile,javadoc" description="Create docs and source distribution" name="srcjar">
    <jar basedir="docs" jarfile="${dist.home}/${component.name}-docs-${component.version}.jar" >
      <include name="**/*.html"/>
      <include name="**/*.css"/> 
      <include name="**/*.php"/>
      <include name="**/*.js"/> 
      <include name="**/*.pdf"/>
      <include name="**/*.gif"/>
    </jar> 
    
    <jar basedir="./" jarfile="${dist.home}/${component.name}-src-${component.version}.jar" >
      <include name="build.xml"/>
      <include name="LICENSE*"/>
      <include name="NOTICE*"/>
      <include name="README*"/>
      <include name="src/**/*.txt"/>
      <include name="src/**/*.java"/>
      <include name="src/**/*.properties"/>
      <include name="src/**/*.xml"/>  
      <include name="lib/**"/>  
    </jar>   
  </target>

  <target depends="clean,jar,srcjar" description="Create binary, docs and source distributions" name="dist"/>
 
   <target depends="compile" name="compile-samples">
     <javac debug="${compile.debug}" 
            deprecation="${compile.deprecation}" 
            destdir="${samples.build.home}/classes" 
            optimize="${compile.optimize}" 
            srcdir="${samples.source.home}">
       <classpath refid="compile.classpath"/>
       <compilerarg compiler="jikes" value="-nowarn"/>
     </javac>
   </target>  


   <target depends="compile-samples" 
          description="runs samples" 
          name="samples-beans">
    <java classname="Beans" 
          failonerror="${test.failonerror}"
          fork="yes" 
          >

        <classpath>
          <pathelement path="${samples.build.home}/classes"/>
          <pathelement path="${build.home}/classes"/>
          <fileset dir="./lib">
		<include name="*.*"/>
          </fileset>
        </classpath>
    </java>
  </target>



   <target depends="compile-samples" 
          description="runs samples" 
          name="samples-trace">
    <java classname="Trace" 
          failonerror="${test.failonerror}"
          fork="yes" 
          >

        <classpath>
          <pathelement path="${samples.build.home}/classes"/>
          <pathelement path="${build.home}/classes"/>
          <fileset dir="./lib">
		<include name="*.*"/>
          </fileset>
        </classpath>
    </java>
  </target>




  <target depends="compile,compile-samples"
    name="build-test">
    <javac debug="${compile.debug}" 
           deprecation="${compile.deprecation}" 
           destdir="${test.build.home}/classes" 
           optimize="${compile.optimize}" 
           srcdir="${source.test}"
         >
   
   <classpath refid="compile.classpath"/>
   <classpath>
   <pathelement path="${build.home}/classes"/>
   <pathelement path="${samples.build.home}/classes" />
   </classpath> 
   <compilerarg compiler="jikes" value="-nowarn"/>
 
   </javac>
  

  </target>

  <target depends="init,build-test" 
          description="runs (junit) unit tests" 
          name="test">
    <java classname="net.sf.cglib.TestAll" 
          failonerror="${test.failonerror}"
          fork="yes" 
          >

  <!-- jvmarg value="-Xrunhprof:heap=all,file=debug.txt"/ --> 
  <!-- <jvmarg value="-verbose:gc"/> --> 
  <!-- <jvmarg value="-verbose:class"/> -->
  <!-- <jvmarg value="-Xprof"/> -->
  <!-- <jvmarg value="-server"/> -->
  <!-- <sysproperty key="cglib.debugLocation" value="debug"/> -->
  <!-- <jvmarg value="-Djava.security.policy==java.policy" /> -->
  <!-- <jvmarg value="-Djava.security.manager" />  -->
 
      <arg value="${test.entry}"/>
        <classpath>
          <pathelement path="${build.home}/classes"/>
          <pathelement path="${test.build.home}/classes"/>
          <pathelement path="${classpath}"/>
          <pathelement path="${java.class.path}"/>
          <pathelement path="${source.test}"/>
          <pathelement path="${samples.build.home}/classes" />      
          <fileset dir="./lib">
		<include name="*.jar"/>
          </fileset>
        </classpath>
    </java>
  </target>

  <target name="test-transform" depends="build-test">
    <mkdir dir="${build.transform}"/>
    <copy todir="${build.transform}" preservelastmodified="yes">
      <fileset dir="${build.home}/classes"/>
      <fileset dir="./lib"/>	
    </copy>
    <taskdef name="example" classname="net.sf.cglib.transform.impl.ExampleTask">
      <classpath>
        <pathelement path="${build.home}/classes"/>
        <pathelement path="${test.build.home}/classes"/>
        <fileset dir="./lib">
          <include name="*.jar"/>
        </fileset>
      </classpath>
    </taskdef>
    <example fieldsuffix="Cglib" verbose="yes">
      <fileset dir="${build.transform}" includes="**/*">
      <!--  <not><depend targetdir="${build.home}/classes"/></not> -->
      </fileset>
    	
      <newproperty name="cglibFoo" type="long"/>
      <newproperty name="cglibBar" type="Double"/>
    </example>
  </target>

</project>
